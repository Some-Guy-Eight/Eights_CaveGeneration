using UnityEngine;
using System.Collections.Generic;
using Sylves;

namespace Tessera.CaveGeneration {
    internal enum PathType {
        Main,
        Split,
    }
    abstract class IPath {
        internal abstract PathType GetPathType();
        internal abstract CellDir GetDirection();
        internal abstract string GetName();
        internal abstract GameObject GetGameObject();
        internal abstract GameObject GetParentObject();
        internal abstract Vector3Int GetWorldPosition();
        internal abstract Vector3Int GetLocalPosition();
        internal abstract List<CellDir> GetPastMoveDirections();
        internal abstract int GetTransverseTally();
        internal abstract int GetStep();
        internal abstract void SetPathType(PathType type);
        internal abstract void SetDirection(CellDir direction);
        internal abstract void SetName(string name);
        internal abstract void SetGameObject(GameObject gameObject);
        internal abstract void SetParentObject(GameObject parentObject);
        internal abstract void SetWorldPosition(Vector3Int worldPosition);
        internal abstract void SetLocalPosition(Vector3Int localPosition);
        internal abstract void SetPastMoveDirections(List<CellDir> PastMoveDirections);
        internal abstract void SetTransverseTally(int transverseTally);
        internal abstract void SetStep(int step);
    }
}
/* Overides to copy in future IPath varients
#region IPath Overides
internal override PathType GetPathType() { return Type; }
internal override CellDir GetDirection() { return Direction; }
internal override string GetName() { return Name; }
internal override GameObject GetGameObject() { return GameObject; }
internal override GameObject GetParentObject() { return ParentObject; }
internal override Vector3Int GetWorldPosition() { returnWorldPosition; }
internal override Vector3Int GetLocalPosition() { returnLocalPosition; }
internal override List<CellDir> GetPastMoveDirections() { returnPastMoveDirections; }
internal override int GetTransverseTally() { return TransverseTally; }
internal override int GetStep() { return Step; }
internal override void SetPathType(PathType type) { Type = type; }
internal override void SetDirection(CellDir direction) { Direction =direction; }
internal override void SetName(string name) { Name = name; }
internal override void SetGameObject(GameObject gameObject) { GameObjec = gameObject; }
internal override void SetParentObject(GameObject parentObject){ ParentObject = parentObject; }
internal override void SetWorldPosition(Vector3Int worldPosition){ WorldPosition = worldPosition; }
internal override void SetLocalPosition(Vector3Int localPosition){ LocalPosition = localPosition; }
internal override void SetPastMoveDirections(List<CellDir>pastMoveDirections) { PastMoveDirections = pastMoveDirections; }
internal override void SetTransverseTally(int transverseTally){ TransverseTally = transverseTally; }
internal override void SetStep(int step) { Step = step; }
#endregion
*/
